CREATE TABLE hospitais.APPHOSP_USUARIO (
  ID_USUARIO NUMBER NOT NULL,
  ID_CADASTRO NUMBER NOT NULL,
  FL_INTERNO NUMBER(1) NOT NULL,
  DT_CRIACAO DATE NOT NULL,
  PRIMARY KEY (ID_USUARIO)
);

  CREATE SEQUENCE hospitais.APPHOSP_USUARIO_SEQ
  MINVALUE 1
  MAXVALUE 999999999999999999999999999       
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
  
  CREATE OR REPLACE TRIGGER hospitais.APPHOSP_USUARIO_TRG
  BEFORE INSERT ON hospitais.APPHOSP_USUARIO
  FOR EACH ROW
BEGIN
  SELECT hospitais.APPHOSP_USUARIO_SEQ.NEXTVAL 
  INTO :NEW.ID_USUARIO
  FROM DUAL;
END; 

-------------------------------------------------------------------------------------------------------------------------------

CREATE TABLE hospitais.APPHOSP_CIRURGIA_USUARIO (
  ID_CIRURGIA NUMBER NOT NULL,
  ID_USUARIO NUMBER NOT NULL,
  DS_CIRURGIA VARCHAR(100) NOT NULL,
  FL_ATIVO NUMBER(1) NOT NULL,
  DT_CRIACAO DATE NOT NULL,
  DT_EXCLUSAO DATE,
  PRIMARY KEY (ID_CIRURGIA),
  CONSTRAINT FK_CIRURGIA_USUARIO FOREIGN KEY(ID_USUARIO) REFERENCES hospitais.APPHOSP_USUARIO(ID_USUARIO)
);

  CREATE SEQUENCE hospitais.APPHOSP_CIRURGIA_USUARIO_SEQ
  MINVALUE 1
  MAXVALUE 999999999999999999999999999       
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
  
  CREATE OR REPLACE TRIGGER hospitais.APPHOSP_CIRURGIA_USUARIO_TRG 
  BEFORE INSERT ON hospitais.APPHOSP_CIRURGIA_USUARIO
  FOR EACH ROW
BEGIN
  SELECT hospitais.APPHOSP_CIRURGIA_USUARIO_SEQ.NEXTVAL 
  INTO :NEW.ID_CIRURGIA 
  FROM DUAL;
END; 

-------------------------------------------------------------------------------------------------------------------------------

CREATE TABLE hospitais.APPHOSP_DADOS_MONIT_PARAM (
  ID_PARAMETRO NUMBER NOT NULL,
  ID_USUARIO NUMBER NOT NULL,
  DS_PARAMETRO VARCHAR(100) NOT NULL,
  DS_UNIDADE_MEDIDA VARCHAR(100),
  FL_ATIVO NUMBER(1) NOT NULL,
  DT_CRIACAO DATE NOT NULL,
  DT_EXCLUSAO DATE,
  PRIMARY KEY (ID_PARAMETRO),
  CONSTRAINT FK_APPHOSP_DADOS_MONIT_PARAM FOREIGN KEY(ID_USUARIO) REFERENCES hospitais.APPHOSP_USUARIO(ID_USUARIO)
);

  CREATE SEQUENCE hospitais.APPHOSP_DADOS_MONIT_PARAM_SEQ
  MINVALUE 1
  MAXVALUE 999999999999999999999999999       
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
  
  CREATE OR REPLACE TRIGGER hospitais.APPHOSP_DADOS_MONIT_PARAM_TRG 
  BEFORE INSERT ON hospitais.APPHOSP_DADOS_MONIT_PARAM
  FOR EACH ROW
BEGIN
  SELECT hospitais.APPHOSP_DADOS_MONIT_PARAM_SEQ.NEXTVAL 
  INTO :NEW.ID_PARAMETRO 
  FROM DUAL;
END; 

-------------------------------------------------------------------------------------------------------------------------------


CREATE TABLE hospitais.APPHOSP_ANTECEDENTE_USUARIO (
  ID_ANTECEDENTE_USUARIO NUMBER NOT NULL,
  ID_USUARIO NUMBER NOT NULL,
  DS_ANTECEDENTE_PARAMETRO VARCHAR(100) NOT NULL,
  FL_ATIVO NUMBER(1) NOT NULL,
  DT_CRIACAO DATE NOT NULL,
  DT_EXCLUSAO DATE,
  PRIMARY KEY (ID_ANTECEDENTE_USUARIO),
  CONSTRAINT FK_ANTECEDENTE_USUARIO FOREIGN KEY(ID_USUARIO) REFERENCES hospitais.APPHOSP_USUARIO(ID_USUARIO)
);

  CREATE SEQUENCE hospitais.APPHOSP_ANTECEDENTE_USER_SEQ
  MINVALUE 1
  MAXVALUE 999999999999999999999999999       
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
  
  CREATE OR REPLACE TRIGGER hospitais.APPHOSP_ANTECEDENTE_USER_TRG 
  BEFORE INSERT ON hospitais.APPHOSP_ANTECEDENTE_USUARIO
  FOR EACH ROW
BEGIN
  SELECT hospitais.APPHOSP_ANTECEDENTE_USER_SEQ.NEXTVAL 
  INTO :NEW.ID_ANTECEDENTE_USUARIO 
  FROM DUAL;
END; 

-------------------------------------------------------------------------------------------------------------------------------


CREATE TABLE hospitais.APPHOSP_CIRURGIA_DATA (
  ID_CIRURGIA_DATA NUMBER NOT NULL,
  ID_CIRURGIA NUMBER NOT NULL,
  DATA_REALIZADA DATE NOT NULL,
  DT_CRIACAO DATE NOT NULL,
  FL_ATIVO NUMBER(1) NOT NULL,
  DT_EXCLUSAO DATE,
  PRIMARY KEY (ID_CIRURGIA_DATA),
  CONSTRAINT FK_CIRURGIA_DATA FOREIGN KEY(ID_CIRURGIA) REFERENCES HOSPITAIS.APPHOSP_CIRURGIA_USUARIO(ID_CIRURGIA)
);

  CREATE SEQUENCE hospitais.APPHOSP_CIRURGIA_DATA_SEQ
  MINVALUE 1
  MAXVALUE 999999999999999999999999999       
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
  
  CREATE OR REPLACE TRIGGER hospitais.APPHOSP_CIRURGIA_DATA_TRG 
  BEFORE INSERT ON hospitais.APPHOSP_CIRURGIA_DATA
  FOR EACH ROW
BEGIN
  SELECT hospitais.APPHOSP_CIRURGIA_DATA_SEQ.NEXTVAL 
  INTO :NEW.ID_CIRURGIA_DATA 
  FROM DUAL;
END; 

-------------------------------------------------------------------------------------------------------------------------------


CREATE TABLE hospitais.APPHOSP_ANT_FAMILIAR_USER (
  ID_ANT_FAMILIAR_USER NUMBER NOT NULL,
  ID_USUARIO NUMBER NOT NULL,
  DS_PARENTESCO VARCHAR(100) NOT NULL,
  FL_ATIVO NUMBER(1) NOT NULL,
  DT_CRIACAO DATE NOT NULL,
  DT_EXCLUSAO DATE,
  PRIMARY KEY (ID_ANT_FAMILIAR_USER),
  CONSTRAINT FK_ANT_FAMILIAR_USER FOREIGN KEY(ID_USUARIO) REFERENCES hospitais.APPHOSP_USUARIO(ID_USUARIO)
);

  CREATE SEQUENCE hospitais.APPHOSP_ANT_FAMILIAR_USER_SEQ
  MINVALUE 1
  MAXVALUE 999999999999999999999999999       
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
  
  CREATE OR REPLACE TRIGGER hospitais.APPHOSP_ANT_FAMILIAR_USER_TRG 
  BEFORE INSERT ON hospitais.APPHOSP_ANT_FAMILIAR_USER
  FOR EACH ROW
BEGIN
  SELECT hospitais.APPHOSP_ANT_FAMILIAR_USER_SEQ.NEXTVAL 
  INTO :NEW.ID_ANT_FAMILIAR_USER 
  FROM DUAL;
END; 

-------------------------------------------------------------------------------------------------------------------------------

CREATE TABLE hospitais.APPHOSP_DADOS_MONIT_PARAM_VAL (
  ID_PARAMETRO_VALOR NUMBER NOT NULL,
  ID_PARAMETRO NUMBER NOT NULL,
  VALOR NUMBER NOT NULL,
  DT_CRIACAO DATE NOT NULL,
  PRIMARY KEY (ID_PARAMETRO_VALOR),
  CONSTRAINT FK_DADOS_MONIT_PARAM_VAL FOREIGN KEY(ID_PARAMETRO) REFERENCES hospitais.APPHOSP_DADOS_MONIT_PARAM(ID_PARAMETRO)
);

  CREATE SEQUENCE hospitais.APPHOSP_D_MONIT_PARAM_VAL_SEQ
  MINVALUE 1
  MAXVALUE 999999999999999999999999999       
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
  
  CREATE OR REPLACE TRIGGER hospitais.APPHOSP_D_MONIT_PARAM_VAL_TRG 
  BEFORE INSERT ON hospitais.APPHOSP_DADOS_MONIT_PARAM_VAL
  FOR EACH ROW
BEGIN
  SELECT hospitais.APPHOSP_D_MONIT_PARAM_VAL_SEQ.NEXTVAL 
  INTO :NEW.ID_PARAMETRO_VALOR 
  FROM DUAL;
END; 

-------------------------------------------------------------------------------------------------------------------------------


CREATE TABLE hospitais.APPHOSP_ALERGIA_USUARIO (
  ID_ALERGIA NUMBER NOT NULL,
  ID_USUARIO NUMBER NOT NULL,
  DS_NOME VARCHAR2(50) NOT NULL
  DS_ALERGIA VARCHAR(100) NOT NULL,
  FL_ATIVO NUMBER(1) NOT NULL,
  DT_CRIACAO DATE NOT NULL,
  DT_EXCLUSAO DATE,
  PRIMARY KEY (ID_ALERGIA),
  CONSTRAINT FK_ALERGIA_USUARIO FOREIGN KEY(ID_USUARIO) REFERENCES hospitais.APPHOSP_USUARIO(ID_USUARIO)
);

  CREATE SEQUENCE hospitais.APPHOSP_ALERGIA_USUARIO_SEQ
  MINVALUE 1
  MAXVALUE 999999999999999999999999999       
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
  
  CREATE OR REPLACE TRIGGER hospitais.APPHOSP_ALERGIA_USUARIO_TRG 
  BEFORE INSERT ON hospitais.APPHOSP_ALERGIA_USUARIO
  FOR EACH ROW
BEGIN
  SELECT hospitais.APPHOSP_ALERGIA_USUARIO_SEQ.NEXTVAL 
  INTO :NEW.ID_ALERGIA 
  FROM DUAL;
END; 

-------------------------------------------------------------------------------------------------------------------------------

CREATE TABLE hospitais.APPHOSP_NECESSIDADE_ESP_ITEM (
  ID_NECESSIDADE_ESPECIAL NUMBER NOT NULL,
  DS_NECESSIDADE VARCHAR(100) NOT NULL,
  FL_ATIVO NUMBER(1) NOT NULL,
  DT_CRIACAO DATE NOT NULL,
  DT_EXCLUSAO DATE,
  PRIMARY KEY (ID_NECESSIDADE_ESPECIAL)
);

  CREATE SEQUENCE hospitais.APPHOSP_NEC_ESP_ITEM_SEQ
  MINVALUE 1
  MAXVALUE 999999999999999999999999999       
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
  
  CREATE OR REPLACE TRIGGER hospitais.APPHOSP_NEC_ESP_ITEM_SEQ_TRG 
  BEFORE INSERT ON hospitais.APPHOSP_NECESSIDADE_ESP_ITEM
  FOR EACH ROW
BEGIN
  SELECT hospitais.APPHOSP_NEC_ESP_ITEM_SEQ.NEXTVAL 
  INTO :NEW.ID_NECESSIDADE_ESPECIAL 
  FROM DUAL;
END; 

-------------------------------------------------------------------------------------------------------------------------------


CREATE TABLE hospitais.APPHOSP_NECESSIDADE_ESP_USER (
  ID_NECESSIDADE_ESP_USUARIO NUMBER NOT NULL,
  ID_NECESSIDADE_ESPECIAL NUMBER NOT NULL,
  ID_USUARIO NUMBER NOT NULL,
  DT_CRIACAO DATE NOT NULL,
  PRIMARY KEY (ID_NECESSIDADE_ESP_USUARIO),
  CONSTRAINT FK_NECESSIDADE_ESP_USER FOREIGN KEY(ID_USUARIO) REFERENCES hospitais.APPHOSP_USUARIO(ID_USUARIO),
  CONSTRAINT FK_NECESSIDADE_ESP_ITEM FOREIGN KEY(ID_NECESSIDADE_ESPECIAL) REFERENCES hospitais.APPHOSP_NECESSIDADE_ESP_ITEM(ID_NECESSIDADE_ESPECIAL)
);

  CREATE SEQUENCE hospitais.APPHOSP_NEC_ESP_USER_SEQ
  MINVALUE 1
  MAXVALUE 999999999999999999999999999       
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
  
  CREATE OR REPLACE TRIGGER hospitais.APPHOSP_NEC_ESP_USER_TRG 
  BEFORE INSERT ON hospitais.APPHOSP_NECESSIDADE_ESP_USER
  FOR EACH ROW
BEGIN
  SELECT hospitais.APPHOSP_NEC_ESP_USER_SEQ.NEXTVAL 
  INTO :NEW.ID_NECESSIDADE_ESP_USUARIO 
  FROM DUAL;
END; 

-------------------------------------------------------------------------------------------------------------------------------


CREATE TABLE hospitais.APPHOSP_MEDICAMENTO_DADOS (
  ID_MEDICAMENTO_DADOS NUMBER NOT NULL,
  ID_USUARIO NUMBER NOT NULL,
  NM_MEDICAMENTO VARCHAR(100) NOT NULL,
  TP_MEDICAMENTO VARCHAR(50) NOT NULL,
  DOSE VARCHAR(100) NOT NULL,
  FL_DIARIO NUMBER(1) NOT NULL,
  FL_CONTINUO NUMBER(1) NOT NULL,
  DT_INICIO_MEDICAMENTO DATE NOT NULL,
  DT_FINAL_MEDICAMENTO DATE,
  INTERVALO_HORA NUMBER,
  INTERVALO_DIAS NUMBER,
  FL_ESTOQUE NUMBER(1) NOT NULL,
  QNT_POR_CAIXA NUMBER,
  QNT_CAIXAS NUMBER,
  TEMPO_ADIAMENTO_ALARME NUMBER,
  SOM_ALARME VARCHAR(100),
  FL_VIBRACAO_ALARME NUMBER(1) NOT NULL,
  FL_TOQUE_ALARME NUMBER(1) NOT NULL,
  FL_SUSPENSO NUMBER(1) NOT NULL,
  FL_ATIVO NUMBER(1) NOT NULL,
  DT_CRIACAO DATE NOT NULL,
  DT_EXCLUSAO DATE,
  PRIMARY KEY (ID_MEDICAMENTO_DADOS),
  CONSTRAINT FK_MEDICAMENTO_DADOS_USUARIO FOREIGN KEY(ID_USUARIO) REFERENCES hospitais.APPHOSP_USUARIO(ID_USUARIO)
);

  CREATE SEQUENCE hospitais.APPHOSP_MEDICAMENTO_DADOS_SEQ
  MINVALUE 1
  MAXVALUE 999999999999999999999999999       
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
  
  CREATE OR REPLACE TRIGGER hospitais.APPHOSP_MEDICAMENTO_DADOS_TRG 
  BEFORE INSERT ON hospitais.APPHOSP_MEDICAMENTO_DADOS
  FOR EACH ROW
BEGIN
  SELECT hospitais.APPHOSP_MEDICAMENTO_DADOS_SEQ.NEXTVAL 
  INTO :NEW.ID_MEDICAMENTO_DADOS 
  FROM DUAL;
END; 

-------------------------------------------------------------------------------------------------------------------------------


CREATE TABLE hospitais.APPHOSP_ANTECEDENTE_FAMILIAR (
  ID_ANT_FAMILIAR NUMBER NOT NULL,
  ID_ANT_FAMILIAR_USER NUMBER NOT NULL,
  DS_ANTECEDENTE VARCHAR(100) NOT NULL,
  DT_CRIACAO DATE NOT NULL,
  FL_ATIVO NUMBER(1) NOT NULL,
  DT_EXCLUSAO DATE,
  PRIMARY KEY (ID_ANT_FAMILIAR),
  CONSTRAINT FK_ANT_FAMILIAR FOREIGN KEY(ID_ANT_FAMILIAR_USER) REFERENCES hospitais.APPHOSP_ANT_FAMILIAR_USER(ID_ANT_FAMILIAR_USER)
);

  CREATE SEQUENCE hospitais.APPHOSP_ANT_FAMILIAR_SEQ
  MINVALUE 1
  MAXVALUE 999999999999999999999999999       
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
  
  CREATE OR REPLACE TRIGGER hospitais.APPHOSP_ANT_FAMILIAR_TRG 
  BEFORE INSERT ON hospitais.APPHOSP_ANTECEDENTE_FAMILIAR
  FOR EACH ROW
BEGIN
  SELECT hospitais.APPHOSP_ANT_FAMILIAR_SEQ.NEXTVAL 
  INTO :NEW.ID_ANT_FAMILIAR 
  FROM DUAL;
END; 

-------------------------------------------------------------------------------------------------------------------------------
CREATE TABLE hospitais.APPHOSP_HABITO_TABAGISMO (
  ID_HABITO_TABAGISMO NUMBER NOT NULL,
  ID_USUARIO NUMBER NOT NULL,
  FL_TABAGISMO NUMBER(1)NOT NULL,
  DATA_TABAGISMO DATE,
  QNT_CIGARROS NUMBER,
  FL_ATIVO NUMBER(1) NOT NULL,
  DT_CRIACAO DATE NOT NULL,
  DT_EXCLUSAO DATE,
  PRIMARY KEY (ID_HABITO_TABAGISMO),
  CONSTRAINT FK_HABITO_TABAGISMO FOREIGN KEY(ID_USUARIO) REFERENCES hospitais.APPHOSP_USUARIO(ID_USUARIO)
);

  CREATE SEQUENCE hospitais.APPHOSP_HABITO_TABAGISMO_SEQ
  MINVALUE 1
  MAXVALUE 999999999999999999999999999       
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
  
  CREATE OR REPLACE TRIGGER hospitais.APPHOSP_HABITO_TABAGISMO_TRG 
  BEFORE INSERT ON hospitais.APPHOSP_HABITO_TABAGISMO
  FOR EACH ROW
BEGIN
  SELECT hospitais.APPHOSP_HABITO_TABAGISMO_SEQ.NEXTVAL 
  INTO :NEW.ID_HABITO_TABAGISMO 
  FROM DUAL;
END; 

-------------------------------------------------------------------------------------------------------------------------------

CREATE TABLE hospitais.APPHOSP_HABITO_CONSUMO_BEBIDAS (
  ID_HABITO_BEBIDA NUMBER NOT NULL,
  ID_USUARIO NUMBER NOT NULL,
  FL_BEBIDA NUMBER(1) NOT NULL, 
  DT_CRIACAO DATE NOT NULL,
  PRIMARY KEY (ID_HABITO_BEBIDA),
  CONSTRAINT FK_HABITO_CONSUMO_BEBIDAS FOREIGN KEY(ID_USUARIO) REFERENCES hospitais.APPHOSP_USUARIO(ID_USUARIO)
);

  CREATE SEQUENCE hospitais.APPHOSP_HABITO_CONS_BEB_SEQ
  MINVALUE 1
  MAXVALUE 999999999999999999999999999       
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
  
  CREATE OR REPLACE TRIGGER hospitais.APPHOSP_HABITO_CONS_BEB_TRG 
  BEFORE INSERT ON hospitais.APPHOSP_HABITO_CONSUMO_BEBIDAS
  FOR EACH ROW
BEGIN
  SELECT hospitais.APPHOSP_HABITO_CONS_BEB_SEQ.NEXTVAL 
  INTO :NEW.ID_HABITO_BEBIDA 
  FROM DUAL;
END; 

-------------------------------------------------------------------------------------------------------------------------------

CREATE TABLE hospitais.APPHOSP_HABITO_ITEM_BEBIDAS (
  ID_ITEM_BEBIDA NUMBER NOT NULL,
  ID_HABITO_BEBIDA NUMBER NOT NULL,
  DS_TIPO_BEBIDA VARCHAR(100),
  DS_FREQUENCIA VARCHAR(100),
  FL_ATIVO NUMBER(1) NOT NULL,
  DT_CRIACAO DATE NOT NULL,
  DT_EXCLUSAO DATE,
  PRIMARY KEY (ID_ITEM_BEBIDA),
  CONSTRAINT FK_HABITO_BEBIDAS FOREIGN KEY (ID_HABITO_BEBIDA) REFERENCES HOSPITAIS.APPHOSP_HABITO_CONSUMO_BEBIDAS(ID_HABITO_BEBIDA)
);

  CREATE SEQUENCE hospitais.APPHOSP_HABITO_I_BEBIDAS_SEQ
  MINVALUE 1
  MAXVALUE 999999999999999999999999999       
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
  
  CREATE OR REPLACE TRIGGER hospitais.APPHOSP_HABITO_I_BEBIDAS_TRG 
  BEFORE INSERT ON hospitais.APPHOSP_HABITO_ITEM_BEBIDAS
  FOR EACH ROW
BEGIN
  SELECT hospitais.APPHOSP_HABITO_I_BEBIDAS_SEQ.NEXTVAL 
  INTO :NEW.ID_ITEM_BEBIDA 
  FROM DUAL;
END; 

-------------------------------------------------------------------------------------------------------------------------------
CREATE TABLE hospitais.APPHOSP_HABITO_ATIV_FISICA (
  ID_HABITO_ATIV_FISICA NUMBER NOT NULL,
  ID_USUARIO NUMBER NOT NULL,
  FL_ATIV_FISICA NUMBER(1) NOT NULL,
  DT_CRIACAO DATE NOT NULL,
  PRIMARY KEY (ID_HABITO_ATIV_FISICA),
  CONSTRAINT FK_HABITO_ATIV_FISICA FOREIGN KEY(ID_USUARIO) REFERENCES hospitais.APPHOSP_USUARIO(ID_USUARIO)
);


  CREATE SEQUENCE hospitais.APPHOSP_HABITO_ATIV_FISICA_SEQ
  MINVALUE 1
  MAXVALUE 999999999999999999999999999       
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
  
  CREATE OR REPLACE TRIGGER hospitais.APPHOSP_HABITO_ATIV_FISICA_TRG 
  BEFORE INSERT ON hospitais.APPHOSP_HABITO_ATIV_FISICA
  FOR EACH ROW
BEGIN
  SELECT hospitais.APPHOSP_HABITO_ATIV_FISICA_SEQ.NEXTVAL 
  INTO :NEW.ID_HABITO_ATIV_FISICA 
  FROM DUAL;
END; 

-------------------------------------------------------------------------------------------------------------------------------
CREATE TABLE hospitais.APPHOSP_HABITO_ITEM_ATV_FISICA (
  ID_ITEM_ATIV_FISICA NUMBER NOT NULL,
  ID_HABITO_ATIV_FISICA NUMBER NOT NULL,  
  DS_TIPO_ATIVIDADE VARCHAR(100),
  DS_FREQUENCIA VARCHAR(100),
  FL_ATIVO NUMBER(1) NOT NULL,
  DT_CRIACAO DATE NOT NULL,
  DT_EXCLUSAO DATE,
  PRIMARY KEY (ID_ITEM_ATIV_FISICA),
  CONSTRAINT FK_HABITO_ITEM_A_FISICA FOREIGN KEY(ID_HABITO_ATIV_FISICA) REFERENCES hospitais.APPHOSP_HABITO_ATIV_FISICA(ID_HABITO_ATIV_FISICA)
);


  CREATE SEQUENCE hospitais.APPHOSP_HABITO_ITEM_A_FISI_SEQ
  MINVALUE 1
  MAXVALUE 999999999999999999999999999       
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
  
  CREATE OR REPLACE TRIGGER hospitais.APPHOSP_HABITO_ITEM_A_FISI_TRG 
  BEFORE INSERT ON hospitais.APPHOSP_HABITO_ITEM_ATV_FISICA
  FOR EACH ROW
BEGIN
  SELECT hospitais.APPHOSP_HABITO_ITEM_A_FISI_SEQ.NEXTVAL 
  INTO :NEW.ID_ITEM_ATIV_FISICA 
  FROM DUAL;
END; 

-------------------------------------------------------------------------------------------------------------------------------

CREATE TABLE hospitais.APPHOSP_DADOS_MONITORADOS_PESO (
  ID_PESO NUMBER NOT NULL,
  ID_USUARIO NUMBER NOT NULL,
  VALOR NUMBER NOT NULL,
  DT_CRIACAO DATE NOT NULL,
  PRIMARY KEY (ID_PESO),
  CONSTRAINT FK_PESO_USUARIO FOREIGN KEY(ID_USUARIO) REFERENCES hospitais.APPHOSP_USUARIO(ID_USUARIO)
);

  CREATE SEQUENCE hospitais.APPHOSP_DADOS_MONIT_PESO_SEQ
  MINVALUE 1
  MAXVALUE 999999999999999999999999999       
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
  
  CREATE OR REPLACE TRIGGER hospitais.APPHOSP_DADOS_MONIT_PESO_TRG 
  BEFORE INSERT ON hospitais.APPHOSP_DADOS_MONITORADOS_PESO
  FOR EACH ROW
BEGIN
  SELECT hospitais.APPHOSP_DADOS_MONIT_PESO_SEQ.NEXTVAL 
  INTO :NEW.ID_PESO 
  FROM DUAL;
END; 

-------------------------------------------------------------------------------------------------------------------------------

CREATE TABLE hospitais.APPHOSP_DADOS_MONIT_ALTURA (
  ID_ALTURA NUMBER NOT NULL,
  ID_USUARIO NUMBER NOT NULL,
  VALOR NUMBER(1,2) NOT NULL,
  DT_CRIACAO DATE NOT NULL,
  PRIMARY KEY (ID_ALTURA),
  CONSTRAINT FK_ALTURA_USUARIO FOREIGN KEY(ID_USUARIO) REFERENCES hospitais.APPHOSP_USUARIO(ID_USUARIO)
);

  CREATE SEQUENCE hospitais.APPHOSP_DADOS_MONIT_ALTURA_SEQ
  MINVALUE 1
  MAXVALUE 999999999999999999999999999       
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
  
  CREATE OR REPLACE TRIGGER hospitais.APPHOSP_DADOS_MONIT_ALTURA_TRG 
  BEFORE INSERT ON hospitais.APPHOSP_DADOS_MONIT_ALTURA
  FOR EACH ROW
BEGIN
  SELECT hospitais.APPHOSP_DADOS_MONIT_ALTURA_SEQ.NEXTVAL 
  INTO :NEW.ID_ALTURA 
  FROM DUAL;
END; 

-------------------------------------------------------------------------------------------------------------------------------


CREATE TABLE hospitais.APPHOSP_MEDICAMENTO_HORARIO (
  ID_MEDICAMENTO_HORARIO NUMBER NOT NULL,
  ID_MEDICAMENTO_DADOS NUMBER NOT NULL,
  HORARIO DATE NOT NULL,
  FL_ATIVO NUMBER(1) NOT NULL,
  DT_CRIACAO DATE NOT NULL,
  DT_EXCLUSAO DATE,
  PRIMARY KEY (ID_MEDICAMENTO_HORARIO),
  CONSTRAINT FK_MEDICAMENTO_DADOS_HORARIO FOREIGN KEY(ID_MEDICAMENTO_DADOS) REFERENCES hospitais.APPHOSP_MEDICAMENTO_DADOS(ID_MEDICAMENTO_DADOS)
);

  CREATE SEQUENCE hospitais.APPHOSP_MEDIC_HORARIO_SEQ
  MINVALUE 1
  MAXVALUE 999999999999999999999999999       
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
  
  CREATE OR REPLACE TRIGGER hospitais.APPHOSP_MEDIC_HORARIO_SEQ_TRG 
  BEFORE INSERT ON hospitais.APPHOSP_MEDICAMENTO_HORARIO
  FOR EACH ROW
BEGIN
  SELECT hospitais.APPHOSP_MEDIC_HORARIO_SEQ.NEXTVAL 
  INTO :NEW.ID_MEDICAMENTO_HORARIO 
  FROM DUAL;
END; 

-------------------------------------------------------------------------------------------------------------------------------

CREATE TABLE hospitais.APPHOSP_MEDICAMENTO_HIST_USER (
  ID_MEDICAMENTO_HISTORICO NUMBER NOT NULL,
  ID_MEDICAMENTO_HORARIO NUMBER NOT NULL,
  FL_TOMOU NUMBER(1) NOT NULL,
  DATA DATE NOT NULL,
  PRIMARY KEY (ID_MEDICAMENTO_HISTORICO),
  CONSTRAINT FK_MEDIC_HIST_USER FOREIGN KEY(ID_MEDICAMENTO_HORARIO) REFERENCES hospitais.APPHOSP_MEDICAMENTO_HORARIO(ID_MEDICAMENTO_HORARIO)
);

  CREATE SEQUENCE hospitais.APPHOSP_MEDIC_HIST_USER_SEQ
  MINVALUE 1
  MAXVALUE 999999999999999999999999999       
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
  
  CREATE OR REPLACE TRIGGER hospitais.APPHOSP_MEDIC_HIST_USER_TRG 
  BEFORE INSERT ON hospitais.APPHOSP_MEDICAMENTO_HIST_USER
  FOR EACH ROW
BEGIN
  SELECT hospitais.APPHOSP_MEDIC_HIST_USER_SEQ.NEXTVAL 
  INTO :NEW.ID_MEDICAMENTO_HISTORICO 
  FROM DUAL;
END; 

-------------------------------------------------------------------------------------------------------------------------------

CREATE TABLE hospitais.APPHOSP_DADOS_MONIT_PRESS_ART (
  ID_PRESS_ART NUMBER NOT NULL,
  ID_USUARIO NUMBER NOT NULL,
  VALOR_SISTOLICA NUMBER NOT NULL,
  VALOR_DIASTOLICA NUMBER NOT NULL,
  DT_CRIACAO DATE NOT NULL,
  PRIMARY KEY (ID_PRESS_ART),
  CONSTRAINT FK_PRESS_ART_USUARIO FOREIGN KEY(ID_USUARIO) REFERENCES hospitais.APPHOSP_USUARIO(ID_USUARIO)
);

  CREATE SEQUENCE hospitais.APPHOSP_PRESS_ART_SEQ
  MINVALUE 1
  MAXVALUE 999999999999999999999999999       
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
  
  CREATE OR REPLACE TRIGGER hospitais.APPHOSP_PRESS_ART_TRG 
  BEFORE INSERT ON hospitais.APPHOSP_DADOS_MONIT_PRESS_ART
  FOR EACH ROW
BEGIN
  SELECT hospitais.APPHOSP_PRESS_ART_SEQ.NEXTVAL 
  INTO :NEW.ID_PRESS_ART 
  FROM DUAL;
END; 

-------------------------------------------------------------------------------------------------------------------------------
